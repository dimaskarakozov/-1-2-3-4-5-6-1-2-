// Task2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <stdio.h>
#include <stdlib.h>

int main()
{
    setlocale(LC_ALL, "Russian");
    int q, w, e, a, s, d;
    float z;
    float x[3], c[3]; // знаю не по теме,но для удобства сортировки

                                //прога #1
    printf("Task2( 1, 2, 3, 4, 5(1) )\n (0,5)  Известны год, номер месяца и день рождения каждого из двух человек. Определить, кто из них старше.");
    printf("\nВведите первую дату(день:месяц:год)-");
    scanf_s("%d:%d:%d", & q, & w, & e);

    printf("\nВведите вторую дату(день:месяц:год)-");
    scanf_s("%d:%d:%d", &a, &s, &d);
    //вводим 2 даты через двоеточие
    if (e > d) {
        printf("\nПервый старше второго на несколько лет");
        printf("\nА если быть точнее на %d", e - d);
    }
    else if (e < d) {
        printf("\nВторой старше второго на несколько лет");
        printf("\nА если быть точнее на %d", d - e);
    }//ведется поверка годов
    else {
        if (w > s) {
            printf("\nПервый старше второго на несколько месяцев");
            printf("\nА если быть точнее на %d", w - s);
        }
        else if (w < s) {
            printf("\nВторой старше второго на несколько месяцев");
            printf("\nА если быть точнее на %d", s - w);
        }//введется проверка месяцев,в случае если года равны
        else {
            if (q > a) {
                printf("\nПервый старше второго на несколько дней");
                printf("\nА если быть точнее на %d", q - a);
            }
            else if (q < a) {
                printf("\nВторой старше второго на несколько дней");
                printf("\nА если быть точнее на %d", a-q);
            }//если ггода и месяцы равны,ищем разницу в днях
            else {
                printf("\nВы родились в 1 день (:"); // вариант,если родились в 1 день
            }
        }
    }
                                 //прога #2
    printf("\n\n\n\n(1) Даны числа x, y. Проверить истинность высказывания: «Точка с координатами (x, y) лежит в заштрихованной области».(Квадрат минус  ромб, квадрат минус круг и I четверть)");
    printf("\nВведите координаты точки(Vx:Vy): ");
    scanf_s("%d:%d", &q, &w);
    if (
        (q < 2 - w) && (q > -2 + w) && (q > -2 - w) && (q < 2 + w)  
        //находим формулу функций по значению их графиков
        )
    {
        printf("Точка входит в первый рисунок\n");//определяем принадлежность
    }
    else {
        printf("Точка не входит в первый рисунок\n");
    };
    if (
        (q*q+w+w<=4) || (q>=0 && w>=0)
        )
    {
        printf("Точка входит во второй рисунок\n");
    }
    else {
        printf("Точка не входит во второй рисунок\n");
    };

                                 //прога #3
    printf("\n\n\n\n(0,5)  Для данного вещественного x найти значение следующей функции f, принимающей значения целого типа:\n 0, если x < 0,\n f(x) = 1, если x принадлежит[0, 1), [2, 3), . . .,\n -1, если x принадлежит[1, 2), [3, 4), . . . .");
    printf("\nВведите число: ");
    scanf_s("%f", &z);
    if(z<0){ printf("\n0"); }
    else if (int(z) % 2 == 0)  //находим число эквивалентное начальному
    {
        printf("\n1");
    }
    else { printf("\n-1"); };
   
    
    
                            //прога #4
    printf("\n\n\n\n(1) Даны длины сторон двух треугольников. Определить подобны ли эти треугольники.");
    printf("\nВведите длину всех трех сторон первого треугольника (через пробел) ");
    scanf_s("%f",&x[0]);
    scanf_s("%f", &x[1]);
    scanf_s("%f", &x[2]);
    printf("\nВведите длину всех трех сторон второго треугольника (через пробел) ");
    scanf_s("%f", &c[0]);
    scanf_s("%f", &c[1]);
    scanf_s("%f", &c[2]);
    
    for (int i = 0; i < 2; i++) //т,к, мы не знаем,в какой очередности вводятся длины,сортируем их в порядке возрастания
    {
       
       if (x[i] > x[i+1])
        {
           
           z= x[i];
           x[i] = x[i + 1];
           x[i + 1]= z;


        };
        

    }
    if (x[0] > x[1])
    {
        z = x[0];
        x[0] = x[1];
        x[ 1] = z;
    };

    printf("%f %f %f",x[0], x[1], x[2] );

                    for (int i = 0; i < 2; i++)
                    {

                        if (c[i] > c[i + 1])
                        {
                           
                            z = c[i];
                            c[i] = c[i + 1];
                            c[i + 1] = z;
                        };


                    }
                    if (c[0] > c[1])
                    {
                        z = c[0];
                        c[0] = c[1];
                        c[1] = z;
                    };
                    printf("\n%f %f %f", c[0], c[1], c[2]);


                    if (((x[0] / c[0]) == (x[1] / c[1]) )&& ((x[1] / c[1]) == (x[2] / c[2]))) {//сравниваем отсортированные отрезки
                        printf("\nПодобны");
                    }
                    else { printf( "\nНе подобны" ); };
                    printf("\nкоэф. подобия равен... ");
                    printf("\n%f", x[0] / c[0]);
                    printf("\n%f", x[1] / c[1]);
                    printf("\n%f", x[2] / c[2]);
                    

                        //прога #5
printf("\n\n\n\n(1) Дан номер года (положительное целое число). Определить количество дней в этом году, учитывая, что обычный год насчитывает 365 дней, а високосный — 366 дней. Високосным считается год, делящийся на 4, за исключением тех годов, которые делятся на 100 и не делятся на 400 (например, годы 300, 1300 и 1900 не являются високосными, а 1200 и 2000 — являются).");
printf("\nУкажите номер года? ");
scanf_s("%d",&q);
if (q % 4 == 0 && (q % 100 != 0 || q % 400 == 0))  //пишем формулу по определению 
{
    printf("\n366 дней в этом году ");
}
else { printf("\n365 дней в этом году "); };



                            //прога #6-1
printf("\n\n\n\n(1) Дано целое число в диапазоне 20–69, определяющее возраст (в годах). Вывести строку-описание указанного возраста, обеспечив правильное согласование числа со словом «год», например: 20 — «двадцать лет», 32 —«тридцать два года», 41 — «сорок один год».");
printf("Введите число c 20-69 ");
scanf_s("%d",&q);


if ((q / 10) == 2)
{
    printf("двадцать ");
}
else if ((q / 10) == 3)
{
    printf("тридцать ");
}
else if ((q / 10) == 4)
{
    printf("сорок ");
}
else if ((q / 10) == 5)
{
    printf("пятьдесят ");
}
else if ((q / 10) == 6)
{
    printf("шестьдесят ");
};
//для каждых десятков и единиц пишем запись цифры

if ((q % 10) == 1)
{printf("один");}
else if((q% 10) ==2)
{printf("два");}
else if ((q % 10) == 3)
{printf("три");}
else if ((q % 10) == 4)
{printf("четыре");}
else if ((q % 10) == 5)
{printf("пять");}
else if ((q % 10) == 6)
{printf("шесть");}
else if ((q % 10) == 7)
{printf("семь");}
else if ((q % 10) == 8)
{printf("восемь");}
else if ((q % 10) == 9)
{printf("девять");};
    return 0;
}                                            //КОНЕЦ

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
